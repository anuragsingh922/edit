{"version":3,"sources":["Component/Navbar.js","Component/Textform.js","Component/Alert.js","Component/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","dist","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","aria-checked","onClick","togglemode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","style","backgroundColor","rows","value","onChange","event","console","log","target","newtext","toUpperCase","toLowerCase","navigator","clipboard","writeText","split","filter","element","length","Alert","alert","word","lower","charAt","slice","capital","message","About","App","setmode","_useState3","_useState4","setalert","showalert","setTimeout","Fragment","title","document","body","Color","react_router_dist","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.48b5ba38.chunk.js","sourcesContent":["import React from 'react'\n// import PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <Link className=\"navbar-brand\" to=\"/\">Text Editor</Link>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"https://www.linkedin.com/in/anurag-singh-17674b221/\">About</Link>\n        </li>\n      </ul>\n      <div className=\"form-check form-switch\">\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\n  <label className={`form-check-label mx-2 text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n</div>\n      {/* <form className=\"d-flex\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form> */}\n    </div>\n  </div>\n</nav>\n  )\n}\n\n\n// Navbar.propTypes = {\n//     title: PropTypes.string\n// }\n\n// Navbar.defaultprops = {\n//     title : PropTypes.string\n// }","import React ,{useState} from 'react'\n\nexport default function Textform(props) {\n  \n  const handleUpclick = ()=>{\n    console.log(\"Uppercase was clicked\");\n    // setText(\"You have clicked haddleUpclick\");\n    let newtext = text.toUpperCase();\n    setText(newtext);\n  }\n\n  const handlelowclick = ()=>{\n    console.log(\"Uppercase was clicked\");\n    // setText(\"You have clicked haddleUpclick\");\n    let newtext = text.toLowerCase();\n    setText(newtext);\n  }\n  \n  const handleonchange = (event)=>{\n    console.log(\"on change\");\n    setText(event.target.value);\n  }\n\n  const cleartext = (event)=>{\n    console.log(\"on change\");\n    setText(\"\");\n  }\n\n  \n  const [text,setText] = useState('');\n  // const [mystyle,setMystyle] = useState({\n  //   color : 'black',\n  //   backgroundColor : 'white'\n  // })\n  // const [dark,setdark] = useState('Enable Dark Mode');\n\n\n  // let wordcount = 0; \n  //   if(text===\"\"){\n  //     wordcount = 0;\n  //   }\n  //   else{\n  //     wordcount = text.split(\" \").length;\n  //   }\n\n\n\n// const mode = ()=>{\n//   if(mystyle.color==='white'){\n//     setdark(\"Enable Dark Mode\");\n//     setMystyle({\n//       backgroundColor : 'white',\n//       color : 'black'\n//     })\n//   }\n//   else{\n//     setdark(\"Enable Light Mode\");\n//     setMystyle({\n//       backgroundColor : 'black',\n//       color : 'white'\n//     })\n//   }\n// }\n\nconst copytext = ()=>{\n  navigator.clipboard.writeText(text);\n}\n\n\n  return (\n    // <div className=\"container\" style={mystyle}>\n    <div className=\"container\" >\n\n<div className=\"mb-3\">\n  <label htmlFor=\"exampleFormControlInput1\" className={`form-label my-2 text-${props.mode==='light'?'dark':'light'}`}>{props.heading}</label>\n</div>\n<div className={`mb-3 text-${props.mode==='light'?'dark':'light'}`}>\n  <textarea className={`form-control text-${props.mode==='light'?'dark':'light'}`} id=\"exampleFormControlTextarea1\" style={{backgroundColor: props.mode==='dark'?'black':'white'}} rows=\"3\" value={text} onChange={handleonchange}></textarea>\n</div>\n<button className=\"btn btn-dark m-2\" onClick={handleUpclick}>Convert to UpperCase</button>\n<br />\n      <button className=\"btn btn-dark m-2\" onClick={handlelowclick}>Convert to UpperCase</button>\n      <br />\n      <button className=\"btn btn-dark m-2\" onClick={cleartext}>Reset</button>\n      <button className=\"btn btn-dark m-2\" onClick={copytext}>Copy Text</button>\n      {/* <button className=\"btn btn-dark m-2\" onClick={mode}>{dark}</button> */}\n      <div className=\"container my-3\">\n        <p className={`text-${props.mode==='light'?'dark':'light'}`}>Total Words = {text.split(/\\s+/).filter((element)=>{\n          return element.length!==0\n        }).length}</p>\n        <p className={`text-${props.mode==='light'?'dark':'light'}`}>Characters = {text!==\" \"?text.split(\"\").length:0}</p>\n        <p className={`text-${props.mode==='light'?'dark':'light'}`}>Total Time Taken to Read = {(0.008)*text!==\" \"?text.split(\" \").filter((element)=>{\n          return element.length!==0\n        }).length:0} s.</p>\n        <p className={`text-${props.mode==='light'?'dark':'light'}`}>{text.length>0?text:\"Enter Something.................\"}</p>\n        {/* <p className={`text-${props.mode==='light'?'dark':'light'}`}>{text}</p> */}\n</div>\n</div>\n)\n}\n\n\n\n","import React from 'react'\n\nexport default function Alert(props) {\n\n    const capital = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n  return (\n    props.alert &&  <div className={`alert alert-${props.alert.type}`} role =\"alert\">\n   {capital(props.alert.type)}: {props.alert.message}\n  {/* <button className=\"btn-close mx-4\" type='button' data-bs-dismiss='alert' aria-label='close'></button> */}\n</div>\n  )\n}\n","import React from 'react'\n// import {Link} from 'react-router-dom';\n\nexport default function About(props) {\n  return (\n//     <div className={`container text-${props.mode==='light'?'dark':'light'}`} >\n//     <header className=\"header\">\n//       <h1>Anurag</h1>\n//       <div className=\"social\">\n//         <a href=\"https://www.instagram.com/anuragsingh922/\"><i className=\"fab fa-instagram\">Insta</i></a>\n//       </div>\n//     </header>\n//     <aside className=\"left\">\n//       <img id=\"profile\" src=\"https://media.licdn.com/dms/image/C4D03AQFPF58mBOwc_w/profile-displayphoto-shrink_400_400/0/1652942683275?e=1677715200&v=beta&t=0u5MyN1wmhTUODKREarepPoDU1hrZbgyoYbSwzQW8tk\" width=\"160px\" />\n//       <ul>\n//         <li><Link to=\"/\">Home</Link></li>\n//         <li><Link to=\"/about\">About</Link></li>\n//       </ul>\n//       <br/><br/>\n//       <p>\"Do something important in life. Let's code.\"<br/></p>\n//     </aside>\n//     <main className=\"content\"/>\n//       <h2>About Me</h2>\n//       <p>Hey,<br/>\n//          Currently pursuing B. Tech from Indian Institute of Information and Technology, Sonepat.\n//       </p>\n//       <hr/><br/>\n//       <table>\n//         <tr>\n//           <th id=\"th\" >SKILL 1</th>\n//           <th id=\"th\" >SKILL 2</th>\n//           <th id=\"th\" >SKILL 3</th>\n//         </tr>\n//         <tr>\n//           <td><i className=\"fas fa-trailer\"></i></td>\n//           <td><i className=\"fas fa-archive\"></i></td>\n//           <td><i className=\"fas fa-broom\"></i></td>\n//         </tr>\n//         <tr>\n//           <td>Full Stack Web Developer</td>\n//           <td>C++/C/Python/DSA</td>\n//           <td>Video Editing, Photo Editing</td>\n//         </tr>\n//         <tr/>\n//       </table>\n//     <footer className=\"footer\">&copy; Copyright Anurag Singh</footer>\n//   </div>\n<div className={`container text-${props.mode==='light'?'dark':'light'}`} >About</div>\n  )\n}\n","import './App.css';\nimport Navbar from './Component/Navbar';\nimport Textform from './Component/Textform';\nimport React , {useState} from 'react';\nimport Alert from './Component/Alert';\nimport About from './Component/About';\n\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode,setmode] = useState('light');\n  const[alert,setalert] = useState(null);\n  // const [text,settext] = useState('dark');\n  // const [textarstyle,settextarstyle] = useState({\n  //   backgroundColor: 'white',\n  //   color: 'black'\n  // });\n\n  const showalert = (message,type)=>{\n    setalert({\n    message : message,\n    type : type\n  })\n  setTimeout(() => {\n    setalert(null);\n  }, 1500);\n}\n  const togglemode = ()=>{\n    if(mode === 'light'){\n      setmode('dark');\n      // settext('light');\n      document.body.style.backgroundColor = 'black'\n      document.body.style.Color = 'white'\n      showalert(\"Dark Mode Enabled\",\"success\");\n      document.title = \"Text Editor : DarkMode\"\n    }\n    else{\n      setmode('light');\n      // settext('dark');\n      document.body.style.backgroundColor = 'white'\n      document.body.style.Color = 'black'\n      showalert(\"Light Mode Enabled\",\"success\");\n      document.title = \"Text Editor\"\n    }\n  }\n\n\n  return (\n    <>\n\n    \n    \n\n    <Router>\n\n    <Navbar title=\"Anurag\" mode = {mode} togglemode = {togglemode} />\n    \n    <Alert alert={alert}/>\n\n\n    {/* <div className=\"xontainer\"> */}\n\n\n    <Routes>\n          \t\t\t<Route path=\"/about\" element={<About  mode={mode}/>} />\n          \t\t\t<Route path=\"/\" element={<Textform heading=\"Enter Text\" mode={mode}/>} />\n        \t\t</Routes>\n        {/* </div> */}\n            \n        </Router>\n\n{/* \n    <div className=\"containe\">\n      Js decalreed name {name}\n    </div> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}